public with sharing class HashingUtility {
    private static final String AES_ALGORITHM = 'AES256'; // ‚úÖ Ensure AES-256 encryption

    private static Blob getDecodedSecretKey() {
        System.debug('üîπ Decoding Secret Key from Base64...');
        return EncodingUtil.base64Decode(Label.EncryptionKey); // ‚úÖ Decoding Base64 Key
    }

    private static Blob getDecodedIV() {
        System.debug('üîπ Decoding IV from Base64...');
        return EncodingUtil.base64Decode(Label.EncryptionIV); // ‚úÖ Decoding Base64 IV
    }

    @AuraEnabled(cacheable=false)
    public static String encryptData(String input) {
        System.debug('üü¢ Received input for encryption: ' + input);

        if (String.isEmpty(input)) {
            System.debug('‚ö†Ô∏è Input is empty or null.');
            return 'Invalid Input';
        }

        try {
            Blob keyBlob = getDecodedSecretKey(); 
            Blob ivBlob = getDecodedIV();
            Blob inputBlob = Blob.valueOf(input);

            System.debug('Prepared Key & IV. Encrypting now...');

            Blob encryptedBlob = Crypto.encrypt(AES_ALGORITHM, keyBlob, ivBlob, inputBlob);
            String encodedResult = EncodingUtil.base64Encode(encryptedBlob);

            System.debug('‚úÖ Encryption successful: ' + encodedResult);
            return encodedResult;
        } catch (Exception e) {
            System.debug('Encryption Failed: ' + e.getMessage());
            return 'Encryption Failed: ' + e.getMessage();
        }
    }

    @AuraEnabled(cacheable=false)
    public static String decryptData(String encryptedData) {
        System.debug('üîπ Received input for decryption: ' + encryptedData);

        if (String.isEmpty(encryptedData)) {
            System.debug('‚ö†Ô∏è Encrypted input is empty or null.');
            return 'Invalid Input';
        }

        try {
            Blob keyBlob = getDecodedSecretKey(); //Decoded AES-256 Key
            Blob ivBlob = getDecodedIV(); //Decoded 16-byte IV
            Blob encryptedBlob = EncodingUtil.base64Decode(encryptedData);

            System.debug('Prepared Key & IV. Decrypting now...');

            Blob decryptedBlob = Crypto.decrypt(AES_ALGORITHM, keyBlob, ivBlob, encryptedBlob);
            String decodedResult = decryptedBlob.toString();

            System.debug('Decryption successful: ' + decodedResult);
            return decodedResult;
        } catch (Exception e) {
            System.debug('Decryption Failed: ' + e.getMessage());
            return 'Decryption Failed: ' + e.getMessage();
        }
    }
}